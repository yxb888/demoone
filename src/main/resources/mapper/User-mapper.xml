<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xb.dao.user.UserDao" >
  <resultMap id="BaseResultMap" type="com.xb.domain.User" >
    <result column="USERID" property="userid" jdbcType="INTEGER" />
    <result column="USERNAME" property="username" jdbcType="VARCHAR" />
    <result column="USERPWD" property="userpwd" jdbcType="VARCHAR" />
    <result column="USERMOBILE" property="usermobile" jdbcType="VARCHAR" />
     <result column="USERLOCK" property="userlock" jdbcType="INTEGER" />
    <result column="KEYONE" property="keyone"  />
    <result column="KEYTOW" property="keytow"  />
    <result column="KEYTRHREE" property="keytrhree" />
  </resultMap>
  
	  <!--   新增时查询用户名是否存在 -->
	<select id="checkName" resultMap="BaseResultMap" parameterType="com.xb.domain.User">
		select * from s_user where username='${username}'
	</select>
	<select id="queryUsers" resultMap="BaseResultMap" >
		select * from s_user 
	</select>
  <!-- 	判断用户名是否存在 -->
	<select id="UserFalg" resultMap="BaseResultMap" parameterType="com.xb.domain.User">
		select * from s_user where username='${username}'
	</select>
  
<!--   判断用户是否被锁 -->
	<select id="lockUser" resultMap="BaseResultMap" parameterType="com.xb.domain.User">
<!-- 													状态     1 正常	2 锁定 -->
		select * from s_user where username='${username}' and userlock = 2
	</select>
	
<!-- 	用户登录 -->
	<select id="loginUserName" resultMap="BaseResultMap" parameterType="com.xb.domain.User">
<!-- 											用户名					密码				状态     1 正常	2 锁定 -->
		select * from s_user where username='${username}' and userpwd='${userpwd}' and userlock = 1
	</select>
	
<!-- 	锁定用户 -->
	<update id="updateUserLock" parameterType="com.xb.domain.User">
		update s_user
		    set userlock = 2
		    where username='${username}'
	</update>
	
	<!-- 	解锁用户 -->
	<update id="updateUserLocks" parameterType="com.xb.domain.User">
		update s_user
		    set userlock = 1
		    where username='${username}'
		    and keyone ='${keyoneStr}'
		    and keytow = '${keytow}'
		    and keytrhree = '${keytrhree}'
	</update>
  
   <!--   新增用户 -->
<insert id="addUser" parameterType="com.xb.domain.User" >
    insert into s_user (USERID, USERNAME, USERPWD, 
      USERMOBILE,USERLOCK,KEYONE,KEYTOW,KEYTRHREE)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{userpwd,jdbcType=VARCHAR}, 
      #{usermobile,jdbcType=VARCHAR},${userlock},'${keyoneStr}','${keytow}','${keytrhree}')
  </insert>
    <update id="updatePasswordMethod">
  update s_user 
   <set >
      <if test="userpwd != null" >
        USERPWD = #{userpwd,jdbcType=VARCHAR},
      </if>
      </set>
  
     where USERMOBILE = #{usermobile,jdbcType=VARCHAR}
  
  </update>
  
  
  <select id="queryTotal" resultType="long"  parameterType="com.xb.domain.User">
  		select count(*) from s_user where 1=1
  </select>
  
  
  <!--   分页 -->

	<select id="PageList" resultMap="BaseResultMap" parameterType="com.xb.domain.User">
			select * from s_user limit #{start},#{end}
		
	</select>
  
	<select id="getResourcesList" resultType="java.util.LinkedHashMap" parameterType="java.lang.String">
		 select * from s_roleuser ur,s_role tr,s_roletree rt,t_permission tt where 
     ur.ur_rid = tr.r_id
     and tr.r_id =rt.rt_rid
     and rt.rt_tid = tt.t_id
     and ur.ur_uid=#{parseInt}
	</select>
  

  
  
  
  
  
  
  
  
  
   <select id="findByUsername" parameterType="string" resultType="com.xb.domain.User">
        SELECT * FROM s_user WHERE username=#{username}
    </select>
    
  
   <select id="sendEmailMethod" parameterType="string" resultType="com.xb.domain.User">
        SELECT * FROM s_user WHERE USERMOBILE=#{parameter}
    </select>
    
     <select id="findByUserid" parameterType="int" resultType="com.xb.domain.User">
        SELECT * FROM s_user WHERE userid=#{userid}
    </select>
  <insert id="insert" parameterType="com.xb.domain.User" >
    insert into s_user (USERID, USERNAME, USERPWD, 
      USERMOBILE)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{userpwd,jdbcType=VARCHAR}, 
      #{usermobile,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xb.domain.User" >
    insert into s_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        USERID,
      </if>
      <if test="username != null" >
        USERNAME,
      </if>
      <if test="userpwd != null" >
        USERPWD,
      </if>
      <if test="usermobile != null" >
        USERMOBILE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpwd != null" >
        #{userpwd,jdbcType=VARCHAR},
      </if>
      <if test="usermobile != null" >
        #{usermobile,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>